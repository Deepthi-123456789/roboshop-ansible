- name : shipping
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1
  tasks:
  - name: install maven
    ansible.builtin.package:
      name: maven
      state: present

  - name: adding user
    ansible.builtin.user:
      name: roboshop
      

  - name: removing directory if precent
    ansible.builtin.file:
      path: /app
      state: absent

- name: creating directory 
    ansible.builtin.file:
      path: /app
      state: directory

- name: downloading an application
  ansible.builtin,get_url:
    url:  https://roboshop-builds.s3.amazonaws.com/shipping.zip 
    dest: /tmp

- name: unzipping the file
  ansible.builtin.unarchive:
    src: /tmp/shipping.zip
    dest: /app
    remote_src: yes

- name: downloading the dependencies
  ansible.builtin.command: mvn clean package
  args:
    chdir: /app

- name: renaming the file
  ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
  args:
    chdir: /app

- name: cpoying
  ansible.builtin.copy:
    src: shipping.service
    dest: /etc/systemd/system/shipping.service

- name: daemon reloading
    ansible.builtin.service:
      daemon-reload: true

- name: start and enable shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes

- name: install mysql
    ansible.builtin.package:
      name: mysql
      state: present

- name: check cities schema exists or not
  ansible.builtin.command:  mysql -h mysql.daws76s.online -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
    register: schema

- name: print output
  ansible.builtin.debug:
      msg: "schema output: {{schema}}"

- name: load cities data
  ansible.builtin.shell: "mysql -h mysql.daws76s.online -uroot -p{{mysql_password}}  < /app/schema/shipping.sql"
    when: schema.stdout != "1"

- name: restarting shipping
  ansible.builtin.service:
      name: shipping
      state: restarted
      